import{Command as t,Plugin as e,icons as n}from"@ckeditor/ckeditor5-core";import{logWarning as i,CKEditorError as o,first as a}from"@ckeditor/ckeditor5-utils";import{createDropdown as s,addToolbarToDropdown as l,ButtonView as r}from"@ckeditor/ckeditor5-ui";
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */const c=["left","right","center","justify"];function m(t){return c.includes(t)}function g(t,e){return"rtl"==e.contentLanguageDirection?"right"===t:"left"===t}function u(t){const e=t.map((t=>{let e;return e="string"==typeof t?{name:t}:t,e})).filter((t=>{const e=c.includes(t.name);return e||i("alignment-config-name-not-recognized",{option:t}),e})),n=e.filter((t=>Boolean(t.className))).length;if(n&&n<e.length)throw new o("alignment-config-classnames-are-missing",{configuredOptions:t});return e.forEach(((e,n,i)=>{const a=i.slice(n+1);if(a.some((t=>t.name==e.name)))throw new o("alignment-config-name-already-defined",{option:e,configuredOptions:t});if(e.className){if(a.some((t=>t.className==e.className)))throw new o("alignment-config-classname-already-defined",{option:e,configuredOptions:t})}})),e}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */const d="alignment";class f extends t{refresh(){const t=this.editor.locale,e=a(this.editor.model.document.selection.getSelectedBlocks());this.isEnabled=Boolean(e)&&this._canBeAligned(e),this.isEnabled&&e.hasAttribute("alignment")?this.value=e.getAttribute("alignment"):this.value="rtl"===t.contentLanguageDirection?"right":"left"}execute(t={}){const e=this.editor,n=e.locale,i=e.model,o=i.document,a=t.value;i.change((t=>{const e=Array.from(o.selection.getSelectedBlocks()).filter((t=>this._canBeAligned(t))),i=e[0].getAttribute("alignment");g(a,n)||i===a||!a?function(t,e){for(const n of t)e.removeAttribute(d,n)}(e,t):function(t,e,n){for(const i of t)e.setAttribute(d,n,i)}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */(e,t,a)}))}_canBeAligned(t){return this.editor.model.schema.checkAttribute(t,d)}}class h extends e{static get pluginName(){return"AlignmentEditing"}constructor(t){super(t),t.config.define("alignment",{options:c.map((t=>({name:t})))})}init(){const t=this.editor,e=t.locale,n=t.model.schema,i=u(t.config.get("alignment.options")).filter((t=>m(t.name)&&!g(t.name,e))),o=i.some((t=>!!t.className));n.extend("$block",{allowAttributes:"alignment"}),t.model.schema.setAttributeProperties("alignment",{isFormatting:!0}),o?t.conversion.attributeToAttribute(function(t){const e={};for(const n of t)e[n.name]={key:"class",value:n.className};const n={model:{key:"alignment",values:t.map((t=>t.name))},view:e};return n}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */(i)):t.conversion.for("downcast").attributeToAttribute(function(t){const e={};for(const{name:n}of t)e[n]={key:"style",value:{"text-align":n}};const n={model:{key:"alignment",values:t.map((t=>t.name))},view:e};return n}(i));const a=function(t){const e=[];for(const{name:n}of t)e.push({view:{key:"style",value:{"text-align":n}},model:{key:"alignment",value:n}});return e}(i);for(const e of a)t.conversion.for("upcast").attributeToAttribute(e);const s=function(t){const e=[];for(const{name:n}of t)e.push({view:{key:"align",value:n},model:{key:"alignment",value:n}});return e}(i);for(const e of s)t.conversion.for("upcast").attributeToAttribute(e);t.commands.add("alignment",new f(t))}}const p=new Map([["left",n.alignLeft],["right",n.alignRight],["center",n.alignCenter],["justify",n.alignJustify]]);class b extends e{get localizedOptionTitles(){const t=this.editor.t;return{left:t("Align left"),right:t("Align right"),center:t("Align center"),justify:t("Justify")}}static get pluginName(){return"AlignmentUI"}init(){const t=this.editor,e=t.ui.componentFactory,n=t.t,i=u(t.config.get("alignment.options"));i.map((t=>t.name)).filter(m).forEach((t=>this._addButton(t))),e.add("alignment",(o=>{const a=s(o);l(a,(()=>i.map((t=>e.create(`alignment:${t.name}`)))),{enableActiveItemFocusOnDropdownOpen:!0,isVertical:!0,ariaLabel:n("Text alignment toolbar")}),a.buttonView.set({label:n("Text alignment"),tooltip:!0}),a.extendTemplate({attributes:{class:"ck-alignment-dropdown"}});const r="rtl"===o.contentLanguageDirection?p.get("right"):p.get("left"),c=t.commands.get("alignment");return a.buttonView.bind("icon").to(c,"value",(t=>p.get(t)||r)),a.bind("isEnabled").to(c,"isEnabled"),this.listenTo(a,"execute",(()=>{t.editing.view.focus()})),a}))}_addButton(t){const e=this.editor;e.ui.componentFactory.add(`alignment:${t}`,(n=>{const i=e.commands.get("alignment"),o=new r(n);return o.set({label:this.localizedOptionTitles[t],icon:p.get(t),tooltip:!0,isToggleable:!0}),o.bind("isEnabled").to(i),o.bind("isOn").to(i,"value",(e=>e===t)),this.listenTo(o,"execute",(()=>{e.execute("alignment",{value:t}),e.editing.view.focus()})),o}))}}
/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */class v extends e{static get requires(){return[h,b]}static get pluginName(){return"Alignment"}}export{v as Alignment,h as AlignmentEditing,b as AlignmentUI};