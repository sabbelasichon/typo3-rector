/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import{SeverityEnum}from"@typo3/backend/enum/severity.js";import Modal from"@typo3/backend/modal.js";import AjaxRequest from"@typo3/core/ajax/ajax-request.js";import RegularEvent from"@typo3/core/event/regular-event.js";import Notification from"@typo3/backend/notification.js";import Viewport from"@typo3/backend/viewport.js";import{FileListDragDropEvent}from"@typo3/filelist/file-list-dragdrop.js";var FileListTransferType;!function(e){e.move="move",e.copy="copy"}(FileListTransferType||(FileListTransferType={}));class FileListTransferHandler{constructor(){new RegularEvent(FileListDragDropEvent.transfer,(e=>{const t=e.detail,r=t.target,s=t.resources;let a,n;if(1===t.resources.length){const e=t.resources[0];a=TYPO3.lang["message.transfer_resource.title"],n=TYPO3.lang["message.transfer_resource.text"].replace("%s",e.name).replace("%s",r.name)}else a=TYPO3.lang["message.transfer_resources.title"],n=TYPO3.lang["message.transfer_resources.text"].replace("%d",s.length.toString(10)).replace("%s",r.name);const o=Modal.confirm(a,n,SeverityEnum.notice,[{text:TYPO3.lang["message.button.cancel"],active:!0,btnClass:"btn-default",name:"cancel",trigger:()=>{o.hideModal()}},{text:TYPO3.lang["message.button.copy"],btnClass:"btn-primary",name:"copy",trigger:()=>{this.transfer(FileListTransferType.copy,s,r),o.hideModal()}},{text:TYPO3.lang["message.button.move"],btnClass:"btn-primary",name:"move",trigger:()=>{this.transfer(FileListTransferType.move,s,r),o.hideModal()}}])})).bindTo(top.document)}transfer(e,t,r){const s=[];t.forEach((e=>{const t={data:e.identifier,target:r.identifier};s.push(t)}));const a={data:{[e]:s}};new AjaxRequest(top.TYPO3.settings.ajaxUrls.file_process).post(a).then((async e=>{const t=await e.resolve();this.handleMessages(t.messages??[]),Viewport.ContentContainer.refresh(),top.document.dispatchEvent(new CustomEvent("typo3:filestoragetree:refresh"))})).catch((async e=>{const t=await e.resolve();this.handleMessages(t.messages??[]),Viewport.ContentContainer.refresh(),top.document.dispatchEvent(new CustomEvent("typo3:filestoragetree:refresh"))}))}handleMessages(e){e.forEach((e=>{Notification.showMessage(e.title||"",e.message||"",e.severity)}))}}export default new FileListTransferHandler;